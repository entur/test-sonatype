plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser'
}

tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            groupId = project.group
            artifactId = project.name
            version = project.version

            pom {
                name = project.name
                description = "A Java and Spring Boot library for obtaining client tokens from an OIDC provider"
                packaging = 'jar'

                url = "https://github.com/entur/${rootProject.name}"

                scm {
                    connection = "scm:git:https://github.com/entur/${rootProject.name}.git"
                    developerConnection = "scm:git:https://github.com/entur/${rootProject.name}.git"
                    url = "https://github.com/entur/${rootProject.name}"
                }

                licenses {
                    license {
                        name = "European Union Public Licence v. 1.2"
                        url = "https://www.eupl.eu/"
                    }
                }

                developers {
                    developer {
                        id = "vevik"
                        name = "Vidar Vevik"
                        email = "vidar.vedvik@entur.org"
                        }
                    }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                app {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                    stage = 'UPLOAD'
                }
            }
        }
    }
    release {
        github {
            skipTag = true
            skipRelease = true
        }
    }
}